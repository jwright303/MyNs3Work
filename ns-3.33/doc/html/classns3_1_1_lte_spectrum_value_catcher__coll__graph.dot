digraph "ns3::LteSpectrumValueCatcher"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::LteSpectrumValueCatcher",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A sink to be plugged to the callback of LteChunkProcessor allowing to save and later retrieve the lat..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_value" ,fontname="Helvetica"];
  Node2 [label="ns3::Ptr\< ns3::SpectrumValue \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node3 [label="ns3::SpectrumValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_value.html",tooltip="Set of values corresponding to a given SpectrumModel."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::SimpleRefCount\l\< SpectrumValue \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1empty.html",tooltip="make Callback use a separate empty type"];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SpectrumValue \>" ,fontname="Helvetica"];
  Node6 [label="ns3::SimpleRefCount\l\< T, PARENT, DELETER \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip="A template-based reference counting class."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_spectrumModel" ,fontname="Helvetica"];
  Node7 [label="ns3::Ptr\< const ns3\l::SpectrumModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node8 [label="ns3::SpectrumModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_model.html",tooltip="Set of frequency values implementing the domain of the functions in the Function Space defined by Spe..."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::SimpleRefCount\l\< SpectrumModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SpectrumModel \>" ,fontname="Helvetica"];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_bands" ,fontname="Helvetica"];
  Node10 [label="std::vector\< BandInfo \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node11 [label="ns3::BandInfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_band_info.html",tooltip="The building block of a SpectrumModel."];
  Node12 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BandInfo \>" ,fontname="Helvetica"];
  Node12 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const ns3::SpectrumModel \>" ,fontname="Helvetica"];
  Node14 [label="ns3::Ptr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip="Smart pointer class similar to boost::intrusive_ptr."];
  Node15 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_values" ,fontname="Helvetica"];
  Node15 [label="std::vector\< double \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< double \>" ,fontname="Helvetica"];
  Node14 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::SpectrumValue \>" ,fontname="Helvetica"];
}
