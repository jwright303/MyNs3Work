digraph "ns3::LteSpectrumValueHelper::GetChannelBandwidth"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::LteSpectrumValueHelper\l::GetChannelBandwidth",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::CcHelper::EquallySpacedCcs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_cc_helper.html#a98e9a4147ad4fb28e809b8a3d53cb0bc",tooltip="EquallySpacedCcs() create a valid std::map< uint8_t, Ptr<ComponentCarrier> > The Primary Component Ca..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CarrierAggregationConfig\lTestCase::EquallySpacedCcs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_carrier_aggregation_config_test_case.html#ae72d2629f6cc56489f3ff95b5bce108b",tooltip="Equally spaced component carriers function."];
}
