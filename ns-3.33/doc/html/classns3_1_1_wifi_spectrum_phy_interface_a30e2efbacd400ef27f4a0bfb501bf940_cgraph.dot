digraph "ns3::WifiSpectrumPhyInterface::StartRx"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::WifiSpectrumPhyInterface\l::StartRx",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Notify the SpectrumPhy instance of an incoming signal."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::SpectrumWifiPhy\l::StartRx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#aead1ebdbaf59361928cd6ffa7abc3161",tooltip="Input method for delivering a signal from the spectrum channel and low-level PHY interface to this Sp..."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::InterferenceHelper\l::AddForeignSignal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a7266c7d6c1f2eabe7bcc08a98a5e9331",tooltip="Add a non-Wifi signal to interference helper."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::InterferenceHelper::Add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#ab51b8d7583a1e2d659fccf4f4d406ec6",tooltip="Add the PPDU-related signal to interference helper."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::InterferenceHelper\l::AppendEvent",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a2a316633728f72317cdbc816dba6a75a",tooltip="Append the given Event."];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::WifiMacHeader\l::SetType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_mac_header.html#a71172371f11f1cfcb3912bb03134c285",tooltip="Set Type/Subtype values with the correct values depending on the given type."];
  Node2 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::Time::As",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#ad5198e31c2512226ca0e58b31fad7fd0",tooltip="Attach a unit to a Time, to facilitate output in a specific unit."];
  Node2 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::SpectrumWifiPhy\l::ConvertHeRuSubcarriers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#aff1f13df5cb050725a5bca70ad7455d3",tooltip=" "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::SpectrumWifiPhy\l::GetBandBandwidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#a41a29304f5453abfbc59872f6725aa56",tooltip=" "];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::WifiPhy::GetChannel\lWidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#af55a96fc67e724abd99aeaeab826187f",tooltip=" "];
  Node12 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::WifiPhy::GetPhyStandard",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a74592831f3eccb4d570a0e3d82940817",tooltip="Get the configured Wi-Fi standard."];
  Node11 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::SpectrumWifiPhy\l::GetGuardBandwidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#a47d771005e6886bc1ec0d4bbe4f433ba",tooltip=" "];
  Node2 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ns3::Copy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a952d99f6d759fee74dda19f308451bc1",tooltip="Return a deep copy of a Ptr."];
  Node16 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ns3::PeekPointer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#af2a7557fe9afdd98d8f6f8f6e412cf5a",tooltip=" "];
  Node2 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ns3::WifiSpectrumValueHelper\l::CreateRfFilter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_spectrum_value_helper.html#af9baff9dc6d17faa49304680616fd327",tooltip="Create a spectral density corresponding to the RF filter."];
  Node18 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ns3::SpectrumValue\l::ConstBandsBegin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_value.html#a501f15b406f5a39f71356e3b79072b5b",tooltip=" "];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="ns3::SpectrumModel\l::Begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_model.html#ab915a10dac63c63d74d9197d1359688a",tooltip="Const Iterator to the model Bands container start."];
  Node18 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ns3::WifiSpectrumValueHelper\l::GetSpectrumModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_spectrum_value_helper.html#a81866460c45fba7db3fcc41b772e17f1",tooltip="Return a SpectrumModel instance corresponding to the center frequency and channel width."];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="f",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$80211b_8c.html#ae7ffc1a8f84fa47a0812b2f2b9627132",tooltip=" "];
  Node21 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ns3::SpectrumModel\l::GetUid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_model.html#ac7e8ea430e6388bd982cc9dd148d7c4c",tooltip=" "];
  Node18 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ns3::SpectrumValue\l::ValuesBegin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_value.html#a3b1adae7ee52561bf560d7b604d9947d",tooltip=" "];
  Node2 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ns3::DbToRatio",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#ad82c32f157b4f17d3165d6565697b64d",tooltip="Convert from dB to ratio."];
  Node2 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ns3::SpectrumWifiPhy\l::GetBand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#a5d5b3b3a00a0e571cd51b62dab5790db",tooltip="Get the start band index and the stop band index for a given band."];
  Node26 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ns3::SpectrumModel\l::GetNumBands",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_model.html#a87535fb130f405c7537e963063c0deb8",tooltip=" "];
  Node26 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ns3::SpectrumWifiPhy\l::GetRxSpectrumModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#acf0b11dce74dc51c4b62c36517d07a9f",tooltip=" "];
  Node28 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ns3::WifiPhy::GetFrequency",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#afca470e272ec5c3126da63c0a6102f4c",tooltip=" "];
  Node28 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ns3::SpectrumWifiPhy\l::UpdateInterferenceHelperBands",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#af04904aae4abd98436b0fcc6c3b431c7",tooltip="This function is called to update the bands handled by the InterferenceHelper."];
  Node30 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ns3::HeRu::GetNRus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_he_ru.html#a71cc57e71a9a37d652fcd25ab9d5140b",tooltip="Get the number of distinct RUs of the given type (number of tones) available in a HE PPDU of the give..."];
  Node30 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ns3::HeRu::GetSubcarrier\lGroup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_he_ru.html#ab43abc3c32eedf5644070f3c9bb5b57e",tooltip="Get the subcarrier group of the RU having the given index among all the RUs of the given type (number..."];
  Node33 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ns3::WifiPhy::GetRxGain",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ab7e2d1d8eacfce01a5504d3d4c97476f",tooltip="Return the reception gain (dB)."];
  Node2 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ns3::WifiPhy::GetRxSensitivity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#acc8eba804fc3b0118fc483954f665e22",tooltip="Return the receive sensitivity threshold (dBm)."];
  Node36 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ns3::WToDbm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a256abf4ba6bab6e20f8419fff00e73e2",tooltip="Convert from Watts to dBm."];
  Node2 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ns3::Integral",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a3dd3817567502f8bc77b04e47134c070",tooltip=" "];
  Node2 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ns3::WifiPhy::StartReceive\lPreamble",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#af931f42dfd80e57d56822a021b13f9a7",tooltip="Start receiving the PHY preamble of a PPDU (i.e."];
  Node39 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ns3::WifiPhy::AbortCurrent\lReception",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a4729f4a5f331978f9b70880a81feaa3b",tooltip="Due to newly arrived signal, the current reception cannot be continued and has to be aborted."];
  Node40 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ns3::EventId::Cancel",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_event_id.html#a993ae94e48e014e1afd47edb16db7a11",tooltip="This method is syntactic sugar for the ns3::Simulator::Cancel method."];
  Node40 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="ns3::WifiPhy::GetAddressed\lPsduInPpdu",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a1f8556187bd0e7680a013cab7dc67346",tooltip="Get the PSDU addressed to that PHY in a PPDU (useful for MU PPDU)."];
  Node94 -> Node95 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="ns3::UintegerValue::Get",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_uinteger_value.html#a82f7ad2ff90cfebf9f6292bb6ace0a05",tooltip=" "];
  Node94 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="ns3::WifiPhy::GetDevice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#adf2fa40dcba4e52e9bc67c6ffc819170",tooltip="Return the device this PHY is associated with."];
  Node40 -> Node100 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="ns3::EventId::IsRunning",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_event_id.html#a8b41e6f8c54db6bede8a7dcaf917074a",tooltip="This method is syntactic sugar for !IsExpired()."];
  Node40 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="ns3::WifiPhy::NotifyRxDrop",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a3260ec7be02b6716e57af6c682bff96a",tooltip="Public method used to fire a PhyRxDrop trace."];
  Node104 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="ns3::InterferenceHelper\l::NotifyRxEnd",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a4b45bac60d8b7c412236794cf393945d",tooltip="Notify that RX has ended."];
  Node105 -> Node80 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="ns3::Simulator::Now",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_simulator.html#ac3178fa975b419f7875e7105be122800",tooltip="Return the current simulation virtual time."];
  Node39 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node106 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="ns3::WifiTxVector::\lGetModeInitialized",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_tx_vector.html#a76c67ceafbc307fd41d049c1b3740761",tooltip=" "];
  Node39 -> Node107 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="ns3::WifiPhy::MaybeCcaBusy\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa4598d83591258697a98d1c2dad5473a",tooltip="Eventually switch to CCA busy."];
  Node107 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="ns3::WifiPhy::GetBand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a88a126855bbc3ad1fd19020cf5c9d2a3",tooltip="Get the start band index and the stop band index for a given band."];
  Node107 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="ns3::InterferenceHelper\l::GetEnergyDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#aaea06c0f0673da9d296066afc74055ad",tooltip=" "];
  Node109 -> Node80 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="ns3::Time::IsZero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#ac4f1f3f3aeff82c1a7d96e0b0ae2220b",tooltip="Exactly equivalent to t == 0."];
  Node39 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node80 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node121 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="ns3::WifiPhy::StartRx",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa648c638c7142f2b3ab902b428710290",tooltip="Starting receiving the PPDU after having detected the medium is idle or after a reception switch."];
  Node121 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node100 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node276 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 [label="ns3::WifiPhy::SwitchMaybe\lToCcaBusy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a75f5905e356d1cdff251043fa10c158e",tooltip="Check if PHY state should move to CCA busy state based on current state of interference tracker."];
  Node276 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node276 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
