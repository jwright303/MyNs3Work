digraph "LteUplinkSrsSinrTestCase"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="LteUplinkSrsSinrTestCase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="In this test one signal will be of interest, i.e., the SRS of the first signal will have the same Cel..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::TestCase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_test_case.html",tooltip="encapsulates test code"];
  Node3 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::NonCopyable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_non_copyable.html",tooltip="A base class for (non-Singleton) objects which shouldn't be copied."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_children" ,fontname="Helvetica"];
  Node4 [label="std::vector\< ns3::TestCase * \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node2 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::TestCase * \>" ,fontname="Helvetica"];
  Node5 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node6 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_dataDir\nm_name" ,fontname="Helvetica"];
  Node7 [label="std::string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_runner" ,fontname="Helvetica"];
  Node9 [label="ns3::TestRunnerImpl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_test_runner_impl.html",tooltip="Container for all tests."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::Singleton\< TestRunner\lImpl \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_singleton.html",tooltip=" "];
  Node3 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TestRunnerImpl \>" ,fontname="Helvetica"];
  Node11 [label="ns3::Singleton\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_singleton.html",tooltip="A template singleton."];
  Node3 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_suites" ,fontname="Helvetica"];
  Node12 [label="std::vector\< TestSuite * \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node13 [label="ns3::TestSuite",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_test_suite.html",tooltip="A suite of tests to run."];
  Node2 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TestSuite * \>" ,fontname="Helvetica"];
  Node7 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_tempDir" ,fontname="Helvetica"];
  Node2 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_parent" ,fontname="Helvetica"];
  Node14 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_result" ,fontname="Helvetica"];
  Node14 [label="ns3::TestCase::Result",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_test_case_1_1_result.html",tooltip="Container for results from a TestCase."];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" failure" ,fontname="Helvetica"];
  Node15 [label="std::vector\< ns3::TestCase\lFailure \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node16 [label="ns3::TestCaseFailure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_test_case_failure.html",tooltip="Container for details of a test failure."];
  Node7 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" actual\ncond\nfile\nlimit\nmessage" ,fontname="Helvetica"];
  Node5 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::TestCaseFailure \>" ,fontname="Helvetica"];
  Node17 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" clock" ,fontname="Helvetica"];
  Node17 [label="ns3::SystemWallClockMs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_system_wall_clock_ms.html",tooltip="Measure elapsed wall clock time in milliseconds."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_priv" ,fontname="Helvetica"];
  Node18 [label="ns3::SystemWallClockMsPrivate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_system_wall_clock_ms_private.html",tooltip="System-dependent implementation for SystemWallClockMs."];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_actualSinr\nm_expectedSinr\nm_sv1\nm_sv2" ,fontname="Helvetica"];
  Node19 [label="ns3::Ptr\< SpectrumValue \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node20 [label="ns3::SpectrumValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_value.html",tooltip="Set of values corresponding to a given SpectrumModel."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ns3::SimpleRefCount\l\< SpectrumValue \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ns3::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1empty.html",tooltip="make Callback use a separate empty type"];
  Node23 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SpectrumValue \>" ,fontname="Helvetica"];
  Node23 [label="ns3::SimpleRefCount\l\< T, PARENT, DELETER \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip="A template-based reference counting class."];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_spectrumModel" ,fontname="Helvetica"];
  Node24 [label="ns3::Ptr\< const ns3\l::SpectrumModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node25 [label="ns3::SpectrumModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_model.html",tooltip="Set of frequency values implementing the domain of the functions in the Function Space defined by Spe..."];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ns3::SimpleRefCount\l\< SpectrumModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node22 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SpectrumModel \>" ,fontname="Helvetica"];
  Node27 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_bands" ,fontname="Helvetica"];
  Node27 [label="std::vector\< BandInfo \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node28 [label="ns3::BandInfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_band_info.html",tooltip="The building block of a SpectrumModel."];
  Node5 -> Node27 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BandInfo \>" ,fontname="Helvetica"];
  Node29 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const ns3::SpectrumModel \>" ,fontname="Helvetica"];
  Node29 [label="ns3::Ptr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip="Smart pointer class similar to boost::intrusive_ptr."];
  Node30 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_values" ,fontname="Helvetica"];
  Node30 [label="std::vector\< double \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< double \>" ,fontname="Helvetica"];
  Node29 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SpectrumValue \>" ,fontname="Helvetica"];
  Node31 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_sm" ,fontname="Helvetica"];
  Node31 [label="ns3::Ptr\< const Spectrum\lModel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node25 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node29 -> Node31 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const SpectrumModel \>" ,fontname="Helvetica"];
}
