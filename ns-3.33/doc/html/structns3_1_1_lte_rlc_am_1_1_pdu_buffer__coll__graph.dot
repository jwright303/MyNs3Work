digraph "ns3::LteRlcAm::PduBuffer"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::LteRlcAm::PduBuffer",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="PduBuffer structure."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_seqNumber" ,fontname="Helvetica"];
  Node2 [label="ns3::SequenceNumber10",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_sequence_number10.html",tooltip="SequenceNumber10 class."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_byteSegments" ,fontname="Helvetica"];
  Node3 [label="std::list\< ns3::Ptr\l\< ns3::Packet \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node4 [label="ns3::Ptr\< ns3::Packet \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node5 [label="ns3::Packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html",tooltip="network packets"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::SimpleRefCount\l\< Packet \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ns3::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1empty.html",tooltip="make Callback use a separate empty type"];
  Node8 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Packet \>" ,fontname="Helvetica"];
  Node8 [label="ns3::SimpleRefCount\l\< T, PARENT, DELETER \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip="A template-based reference counting class."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_nixVector" ,fontname="Helvetica"];
  Node9 [label="ns3::Ptr\< ns3::NixVector \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node10 [label="ns3::NixVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_nix_vector.html",tooltip="Neighbor-index data structure for nix-vector routing."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::SimpleRefCount\l\< NixVector \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node7 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NixVector \>" ,fontname="Helvetica"];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_nixVector" ,fontname="Helvetica"];
  Node12 [label="std::vector\< uint32_t \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< uint32_t \>" ,fontname="Helvetica"];
  Node13 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node14 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::NixVector \>" ,fontname="Helvetica"];
  Node15 [label="ns3::Ptr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip="Smart pointer class similar to boost::intrusive_ptr."];
  Node16 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_metadata" ,fontname="Helvetica"];
  Node16 [label="ns3::PacketMetadata",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet_metadata.html",tooltip="Handle packet metadata about packet headers and trailers."];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_data" ,fontname="Helvetica"];
  Node17 [label="ns3::PacketMetadata\l::Data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_packet_metadata_1_1_data.html",tooltip="Data structure."];
  Node18 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_freeList" ,fontname="Helvetica"];
  Node18 [label="ns3::PacketMetadata\l::DataFreeList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet_metadata_1_1_data_free_list.html",tooltip="Class to hold all the metadata."];
  Node13 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_byteTagList" ,fontname="Helvetica"];
  Node19 [label="ns3::ByteTagList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_byte_tag_list.html",tooltip="keep track of the byte tags stored in a packet."];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_data" ,fontname="Helvetica"];
  Node20 [label="ns3::ByteTagListData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_byte_tag_list_data.html",tooltip="Internal representation of the byte tags stored in a packet."];
  Node21 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_packetTagList" ,fontname="Helvetica"];
  Node21 [label="ns3::PacketTagList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet_tag_list.html",tooltip="List of the packet tags stored in a packet."];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_next" ,fontname="Helvetica"];
  Node22 [label="ns3::PacketTagList\l::TagData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_packet_tag_list_1_1_tag_data.html",tooltip="Tree node for sharing serialized tags."];
  Node22 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" next" ,fontname="Helvetica"];
  Node23 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" tid" ,fontname="Helvetica"];
  Node23 [label="ns3::TypeId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_type_id.html",tooltip="a unique identifier for an interface."];
  Node24 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_buffer" ,fontname="Helvetica"];
  Node24 [label="ns3::Buffer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_buffer.html",tooltip="automatically resized byte buffer"];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_data" ,fontname="Helvetica"];
  Node25 [label="ns3::Buffer::Data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_buffer_1_1_data.html",tooltip="This data structure is variable-sized through its last member whose size is determined at allocation ..."];
  Node26 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" g_localStaticDestructor" ,fontname="Helvetica"];
  Node26 [label="ns3::Buffer::LocalStatic\lDestructor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_buffer_1_1_local_static_destructor.html",tooltip="Local static destructor structure."];
  Node13 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" g_freeList" ,fontname="Helvetica"];
  Node15 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::Packet \>" ,fontname="Helvetica"];
  Node27 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::Ptr\< ns3::Packet \> \>" ,fontname="Helvetica"];
  Node27 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
}
