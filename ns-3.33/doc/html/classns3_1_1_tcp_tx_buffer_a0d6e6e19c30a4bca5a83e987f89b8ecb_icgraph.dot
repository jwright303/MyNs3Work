digraph "ns3::TcpTxBuffer::ConsistencyCheck"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::TcpTxBuffer::Consistency\lCheck",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Check if the values of sacked, lost, retrans, are in sync with the sent list."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::TcpTxBuffer::AddRenoSack",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a8cdafac79938c8dd8abcfa8011b5f6d4",tooltip="Emulate SACKs for SACKless connection: account for a new dupack."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::TcpTxBuffer::DiscardUpTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#abc21a693005857d1f2185a32fc490d29",tooltip="Discard data up to but not including this sequence number."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="TcpRateLinuxWithBufferTest\l::TestWithSackBlocks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_rate_linux_with_buffer_test.html#ab14d877f5f6c3c8f1e5715a41104585f",tooltip="Test with arbitary SACK scenario."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="TcpRateLinuxWithBufferTest\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_rate_linux_with_buffer_test.html#a3b5486d4efb798fb5847e46d61131664",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::TcpTxBuffer::CopyFrom\lSequence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a7b376f6a4ccc3b43a2d038e8282fbf01",tooltip="Copy data from the range [seq, seq+numBytes) into a packet."];
  Node6 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="TcpTxBufferTestCase\l::TestMergeItemsWhenGetTransmitted\lSegment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_tx_buffer_test_case.html#a14fcf71a938418d4d075a3e704a16e44",tooltip="Test the logic of merging items in GetTransmittedSegment() which is triggered by CopyFromSequence()"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="TcpTxBufferTestCase\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_tx_buffer_test_case.html#a004312af9ed95478a651632f8e5a7181",tooltip="Implementation to actually run this TestCase."];
  Node6 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::TcpTxBuffer::Delete\lRetransmittedFlagFromHead",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#acf6696197e54af203933e69a7e3a4f01",tooltip="DeleteRetransmittedFlagFromHead."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::TcpTxBuffer::MarkHead\lAsLost",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a9c84073be0f146fa841f82ac7a55def5",tooltip="Mark the head of the sent list as lost."];
  Node10 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::TcpTxBuffer::ResetLast\lSegmentSent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a61f519ff65cbadfb81099f866f1722f0",tooltip="Take the last segment sent and put it back into the un-sent list (at the beginning)"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::TcpTxBuffer::SetSent\lListLost",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#ab41595f999596a33725cf137d643d906",tooltip="Set the entire sent list as lost (typically after an RTO)"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::TcpTxBuffer::Update",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a831b7bfcb9d88d4c71b36c122c32bfa8",tooltip="Update the scoreboard."];
  Node13 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::TcpTxBuffer::Update\lLostCount",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#aa1bc23384777b1aa310a40a33f9c26df",tooltip="Update the lost count."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
