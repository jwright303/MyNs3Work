digraph "ns3::TcpTxBuffer::SplitItems"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::TcpTxBuffer::SplitItems",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Split one TcpTxItem."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::TcpTxBuffer::GetPacket\lFromList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a3935705ed28789f4e438479d207f61c8",tooltip="Get a block (which is returned as Packet) from a list."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::TcpTxBuffer::GetNew\lSegment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a7f8012f60263f1184f63d68f95d9fed6",tooltip="Get a block of data not transmitted yet and move it into SentList."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::TcpTxBuffer::CopyFrom\lSequence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a7b376f6a4ccc3b43a2d038e8282fbf01",tooltip="Copy data from the range [seq, seq+numBytes) into a packet."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::TcpTxBuffer::DiscardUpTo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#abc21a693005857d1f2185a32fc490d29",tooltip="Discard data up to but not including this sequence number."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="TcpRateLinuxWithBufferTest\l::TestWithSackBlocks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_rate_linux_with_buffer_test.html#ab14d877f5f6c3c8f1e5715a41104585f",tooltip="Test with arbitary SACK scenario."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="TcpRateLinuxWithBufferTest\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_rate_linux_with_buffer_test.html#a3b5486d4efb798fb5847e46d61131664",tooltip="Implementation to actually run this TestCase."];
  Node4 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="TcpTxBufferTestCase\l::TestMergeItemsWhenGetTransmitted\lSegment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_tx_buffer_test_case.html#a14fcf71a938418d4d075a3e704a16e44",tooltip="Test the logic of merging items in GetTransmittedSegment() which is triggered by CopyFromSequence()"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="TcpTxBufferTestCase\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tcp_tx_buffer_test_case.html#a004312af9ed95478a651632f8e5a7181",tooltip="Implementation to actually run this TestCase."];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::TcpTxBuffer::GetTransmitted\lSegment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_tx_buffer.html#a4de9715c65893a5cb8a869e72ed7bb10",tooltip="Get a block of data previously transmitted."];
  Node10 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
