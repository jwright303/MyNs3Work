digraph "ns3::WifiMode::GetUniqueName"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::WifiMode::GetUniqueName",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::IdealWifiManager\l::AddSnrThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a07b8198f3c1f258c46af76a3ffe746a7",tooltip="Adds a pair of WifiTxVector and the minimum SNR for that given vector to the list."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::IdealWifiManager\l::BuildSnrThresholds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a9324f6fe2c6e6b7b2212f4aac69f9dee",tooltip="Construct the vector of minimum SNRs needed to successfully transmit for all possible combinations (r..."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::IdealWifiManager\l::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a678947f49366ca1734b6299b667845da",tooltip="Initialize() implementation."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::IdealWifiManager\l::GetSnrThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#ae91f9cb4e73c9743497c2d775b482385",tooltip="Return the minimum SNR needed to successfully transmit data with this WifiTxVector at the specified B..."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::IdealWifiManager\l::DoGetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a2e7570eb1f5cbef1067cfb714e94218e",tooltip=" "];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ns3::IdealWifiManager\l::DoGetRtsTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#ab263f9a1c04747b2c2b55774bf97854a",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::IdealWifiManager\l::DoReportDataOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#af04954f204b9f19c7bf800d1dc98e6b9",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::IdealWifiManager\l::DoReportRtsOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a3baa107493052456308092dd737f94a0",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::ApWifiMac::GetSupported\lRates",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#a0b627f2e2ca56a38915e18a7a55ace79",tooltip="Return an instance of SupportedRates that contains all rates that we support including HT rates."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::ApWifiMac::SendAssocResp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#ad7fef463a6076916fa1f5a989e56f13d",tooltip="Forward an association or a reassociation response packet to the DCF."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::ApWifiMac::Receive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#af264125e11c4d132d18966a6aa02ace5",tooltip="This method acts as the MacRxMiddle receive callback and is invoked to notify us that a frame has bee..."];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::ApWifiMac::SendOneBeacon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#a6c8cbc0fc95f3eaf4840d4ffcf78fac5",tooltip="Forward a beacon packet to the beacon special DCF."];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::ApWifiMac::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#a398b0e04d5c31b7459358a459beff098",tooltip="Initialize() implementation."];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::ApWifiMac::SetBeacon\lGeneration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#a09ad3b96835cb8fac18783423d3e57a7",tooltip="Enable or disable beacon generation of the AP."];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ns3::ApWifiMac::GetTypeId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#aa7cd3c1ec15889267ab5b5e183b91d2b",tooltip="Get the type ID."];
  Node10 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ns3::ApWifiMac::SendProbeResp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ap_wifi_mac.html#a0a9fcbd87326c5c56644deb3504038df",tooltip="Forward a probe response packet to the DCF."];
  Node17 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ns3::WifiTxVector::\lIsValid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_tx_vector.html#a93cb4439b90c64b1baf4ff3c5246e3b2",tooltip="The standard disallows certain combinations of WifiMode, number of spatial streams,..."];
  Node18 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ns3::MinstrelHtWifiManager\l::IsValidMcs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#ae830b47b0301066a9e16fed61fc1882d",tooltip="Check the validity of a combination of number of streams, chWidth and mode."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="ns3::MinstrelHtWifiManager\l::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a3c5c32d2a58fb45a922e435192b0cf43",tooltip="Initialize() implementation."];
  Node19 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ns3::MinstrelHtWifiManager\l::RateInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a3b59b889db624539c6d5af89fa5e9f74",tooltip="Initialize Minstrel Table."];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ns3::MinstrelHtWifiManager\l::CheckInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a7f94804a34efa6121bdfd5d01ac34694",tooltip="Check for initializations."];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ns3::MinstrelHtWifiManager\l::DoGetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#abc2436c9c8dabb7c78907f478e1bb8c7",tooltip=" "];
  Node22 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ns3::MinstrelHtWifiManager\l::DoGetRtsTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a8628d42b27a3bf5cbbd4ea0ec2a79307",tooltip=" "];
  Node22 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ns3::MinstrelHtWifiManager\l::DoNeedRetransmission",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a82e4438440288e8418b501893a11bacb",tooltip=" "];
  Node22 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ns3::MinstrelHtWifiManager\l::DoReportAmpduTxStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#ae46e486574f5eb6e591fe147f8cd388e",tooltip="Typically called per A-MPDU, either when a Block ACK was successfully received or when a BlockAckTime..."];
  Node22 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ns3::MinstrelHtWifiManager\l::DoReportDataFailed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#aa586c8a920a75e94428f44b560aefc7e",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node22 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ns3::MinstrelHtWifiManager\l::DoReportDataOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#aa0843d3f01c36ec861881c5770e55b03",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node22 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ns3::MinstrelHtWifiManager\l::DoReportFinalDataFailed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a7f0e93d9dccdb7bbbe35ff9b6d117d53",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node22 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ns3::MinstrelHtWifiManager\l::DoReportFinalRtsFailed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a9891afb45c6fd574a040dfef9d85014f",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node22 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ns3::MinstrelHtWifiManager\l::DoReportRtsFailed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a755d4934c2a8ea5392c23aed6ae85851",tooltip="This method is a pure virtual method that must be implemented by the sub-class."];
  Node22 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ns3::MinstrelHtWifiManager\l::UpdateRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#abb282b56803faf26139d0db929b09b22",tooltip="Update rate."];
  Node32 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ns3::operator\<\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a3a8fb206e33137628bb0105dac8bbf33",tooltip="Serialize WifiTxVector to the given ostream."];
  Node18 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ns3::WifiPpdu::SetPhyHeaders",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#a5f14f8fd340d849570daffe0a46a31ed",tooltip="Fill in the PHY headers."];
  Node34 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ns3::WifiPpdu::WifiPpdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#affdab2aad4f0603bf9e9e10717b38f08",tooltip="Create a SU PPDU storing a PSDU."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ns3::operator\<\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a57863964b1cdf873dff3b24df1f0c04b",tooltip="Serialize WifiMode to ostream (human-readable)."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ns3::WaveNetDevice\l::RegisterTxProfile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wave_net_device.html#a9c79e073964d5d94bd6bf6facc7aad9b",tooltip=" "];
  Node37 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="WaveNetDeviceExample\l::SendIpExample",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_wave_net_device_example.html#a97da76e52cd76f5054e8c92cfae01a9e",tooltip="Send IP example function."];
}
