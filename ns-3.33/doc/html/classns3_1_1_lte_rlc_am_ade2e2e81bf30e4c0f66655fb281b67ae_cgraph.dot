digraph "ns3::LteRlcAm::DoReceivePdu"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::LteRlcAm::DoReceivePdu",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Receive PDU function."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::EventId::Cancel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_event_id.html#a993ae94e48e014e1afd47edb16db7a11",tooltip="This method is syntactic sugar for the ns3::Simulator::Cancel method."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::Simulator::Cancel",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_simulator.html#a1b903a62d6117ef28f7ba3c6500689bf",tooltip="Set the cancel bit on this event: the event's associated function will not be invoked when it expires..."];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::GetImpl",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__simulator.html#ga42eb4eddad41528d4d99794a3dae3fd0",tooltip="Get the SimulatorImpl singleton."];
  Node1 -> Node56 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="ns3::LteRlcAm::DoReportBuffer\lStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am.html#ad81917dde659b1c241aa8d22013c8f4b",tooltip="Report buffer status."];
  Node56 -> Node57 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="ns3::Time::GetMilliSeconds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#ad012aa15ec441ad811a09954f95e4a8d",tooltip="Get an approximation of the time stored in this instance in the indicated unit."];
  Node57 -> Node58 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="ns3::Time::ToInteger",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#a4bd2d3c8a919e4b57e60692b53db4a61",tooltip="Get the Time value expressed in a particular unit."];
  Node56 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="ns3::SequenceNumber10\l::GetValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_sequence_number10.html#a595bc56fb49b0ec88f5cffc34eacca74",tooltip="Extracts the numeric value of the sequence number."];
  Node56 -> Node68 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="ns3::EventId::IsRunning",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_event_id.html#a8b41e6f8c54db6bede8a7dcaf917074a",tooltip="This method is syntactic sugar for !IsExpired()."];
  Node68 -> Node69 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="ns3::EventId::IsExpired",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_event_id.html#acc25141054209b1a286a5471a51bd0c0",tooltip="This method is syntactic sugar for the ns3::Simulator::IsExpired method."];
  Node56 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="ns3::Simulator::Now",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simulator.html#ac3178fa975b419f7875e7105be122800",tooltip="Return the current simulation virtual time."];
  Node42 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ns3::SimulatorImpl::Now",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simulator_impl.html#aa516c50060846adc6fd316e83ef0797c",tooltip="Return the current simulation virtual time."];
  Node56 -> Node72 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="ns3::LteMacSapProvider\l::ReportBufferStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_mac_sap_provider.html#a9b871a79546b8d06debd925d8863d442",tooltip="Report the RLC buffer status to the MAC."];
  Node56 -> Node73 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="ns3::Seconds",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__timecivil.html#ga33c34b816f8ff6628e33d5c8e9713b9e",tooltip="Construct a Time in the indicated unit."];
  Node1 -> Node74 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="ns3::LteRlcAm::ExpireReordering\lTimer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am.html#a5ad4b058f9936aefde06a1787340e448",tooltip="This method will schedule a timeout at WaitReplyTimeout interval in the future, unless a timer is alr..."];
  Node74 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 -> Node75 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="ns3::Simulator::Schedule",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_simulator.html#a3da7d28335c8ac0e3e86781f766df241",tooltip="Schedule an event to expire after delay."];
  Node1 -> Node87 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="ns3::Packet::FindFirstMatching\lByteTag",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#a97561e433646891407aae64e750c8c0f",tooltip="Finds the first tag matching the parameter Tag type."];
  Node87 -> Node88 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="ns3::Packet::GetByteTagIterator",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#ab852750df6d72762d3deed52844d5a82",tooltip="Returns an iterator over the set of byte tags included in this packet."];
  Node88 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="ns3::Packet::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#afff7cb1ff518ee6dc0d424e10a5ad6ec",tooltip="Returns the the size in bytes of the packet (including the zero-filled initial payload)."];
  Node90 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="ns3::Buffer::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_buffer.html#a60c9172d2b102f8856c81b2126c8b209",tooltip=" "];
  Node87 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ns3::ObjectBase::GetInstance\lTypeId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_object_base.html#abe5b43a6f5b99a92a4c3122db31f06fb",tooltip="Get the most derived TypeId for this Object."];
  Node87 -> Node92 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="ns3::ByteTagIterator\l::Item::GetTag",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_byte_tag_iterator_1_1_item.html#a9508d234e90b3811f75ec23fa472d18a",tooltip="Read the requested tag and store it in the user-provided tag instance."];
  Node92 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="ns3::ByteTagIterator\l::Item::GetTypeId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_byte_tag_iterator_1_1_item.html#a6164174c57ce5bbab667e4a490fc7d01",tooltip=" "];
  Node87 -> Node95 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="ns3::ByteTagIterator\l::HasNext",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_byte_tag_iterator.html#a6ff57316e6dfb68bcc5a600df95278fe",tooltip=" "];
  Node87 -> Node97 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="ns3::ByteTagIterator\l::Next",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_byte_tag_iterator.html#af2fa25a08fe0a868ab051e3c4bfcad01",tooltip=" "];
  Node1 -> Node100 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="ns3::LteRlcAmHeader\l::GetAckSn",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#a2c2ad5d3fdb8f86e29fa75bc1d466377",tooltip="Get ack sn function."];
  Node1 -> Node101 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="ns3::Time::GetNanoSeconds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#aff67d7a8139243a066d5292595caa966",tooltip="Get an approximation of the time stored in this instance in the indicated unit."];
  Node101 -> Node58 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node102 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="ns3::LteRlcAmHeader\l::GetPollingBit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#a016cf289987fc587a3f8c2ad1f17cabd",tooltip="Get polling bit function."];
  Node1 -> Node103 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="ns3::LteRlcAmHeader\l::GetResegmentationFlag",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#ad3d5a3af64df8b1f8eaa3e695b5e105b",tooltip="Get resegmentation flag function."];
  Node1 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="ns3::RlcTag::GetSenderTimestamp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_rlc_tag.html#ab29686b423a30988454541c7ed99ee96",tooltip="Get the instant when the RLC delivers the PDU to the MAC SAP provider."];
  Node1 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="ns3::LteRlcAmHeader\l::GetSequenceNumber",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#af0144a39fdd4c5a5d3a405032aa7bf8b",tooltip="Get sequence number."];
  Node1 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node106 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="ns3::LteRlcAmHeader\l::IsControlPdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#a5e57cbaa9f1b0fb95dde58d6c8aed598",tooltip="Is control PDU function."];
  Node1 -> Node107 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="ns3::LteRlcAmHeader\l::IsDataPdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#a7c679bc834792ca094c3ea61bc48f6da",tooltip="Is data PDU function."];
  Node1 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="ns3::LteRlcAm::IsInsideReceiving\lWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am.html#a278f6dd09bf7c65bd85fab4ece7ff11a",tooltip="method called when the T_status_prohibit timer expires"];
  Node108 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="ns3::SequenceNumber10\l::SetModulusBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_sequence_number10.html#afd6d1e35503ecdab3a9b4b3e8c77e47c",tooltip="Set modulus base."];
  Node1 -> Node110 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="ns3::LteRlcAmHeader\l::IsNackPresent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#ae8b9985c80d212195999decc005244c1",tooltip=" "];
  Node110 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node68 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node111 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="ns3::MilliSeconds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__timecivil.html#gaf26127cf4571146b83a92ee18679c7a9",tooltip="Construct a Time in the indicated unit."];
  Node111 -> Node112 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="ns3::Time::FromInteger",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_time.html#a3e742c67b2764e75ff95f9b754d43fe9",tooltip="Create a Time equal to value in unit unit."];
  Node1 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node113 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="ns3::Packet::PeekHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#acc152757db7d44974640b089335b7003",tooltip="Deserialize but does not remove the header from the internal buffer."];
  Node113 -> Node114 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="ns3::Buffer::Begin",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_buffer.html#acb977a0179de9abe4e295ce22023b4ca",tooltip=" "];
  Node113 -> Node116 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="ns3::Header::Deserialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_header.html#a78be9400bb66b2a8543606f395ef5396",tooltip=" "];
  Node113 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::TypeId::GetName",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_type_id.html#abc4965475a579c2afdc668d7a7d58374",tooltip="Get the name."];
  Node1 -> Node117 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="ns3::LteRlcAm::Reassemble\lAndDeliver",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am.html#ada1201339d0a54e50adc27b09d3c5c1e",tooltip="Reassemble and deliver."];
  Node117 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="ns3::Packet::AddAtEnd",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#a14ec3d4250b425468764de58f5837b6b",tooltip="Concatenate the input packet at the end of the current packet."];
  Node118 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node158 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="ns3::Packet::CreateFragment",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#acdb23fec2c1dbebd9e6917895e9bcc65",tooltip="Create a new packet which contains a fragment of the original packet."];
  Node158 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node87 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node168 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="ns3::LteRlcAmHeader\l::GetFramingInfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#aed7980c17190761e85cd56d2f6fd3f81",tooltip="Get framing info."];
  Node117 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node169 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node169 [label="ns3::LteRlcAmHeader\l::PopExtensionBit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#a5ad09a55d3093709e521021266752412",tooltip="Pop extension bit function."];
  Node117 -> Node170 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="ns3::LteRlcAmHeader\l::PopLengthIndicator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_am_header.html#aada74283d61785bdae7b6b33bd4a1c63",tooltip="Pop length indicator function."];
  Node117 -> Node171 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 [label="ns3::LteRlcSapUser\l::ReceivePdcpPdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lte_rlc_sap_user.html#aaadbd52044f4bf26453b6eb2e26df9c8",tooltip="Called by the RLC entity to notify the PDCP entity of the reception of a new PDCP PDU."];
  Node117 -> Node172 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="ns3::Packet::RemoveAtStart",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_packet.html#a78aa207e7921dd2f9f7e0d0b7a1c730a",tooltip="Remove size bytes from the start of the current packet."];
  Node1 -> Node75 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
