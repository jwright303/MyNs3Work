digraph "ns3::Hash::Example::Collider"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::Hash::Example\l::Collider",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Keep track of collisions."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_dict" ,fontname="Helvetica"];
  Node2 [label="std::map\< uint64_t,\l std::string \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node3 [label="std::string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< uint64_t, std::string \>" ,fontname="Helvetica"];
  Node5 [label="std::map\< K, T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node6 [label="K",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node7 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_coll" ,fontname="Helvetica"];
  Node8 [label="std::vector\< std::pair\l\< uint64_t, std::string \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< uint64\l_t, std::string \> \>" ,fontname="Helvetica"];
  Node9 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_name" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_hash" ,fontname="Helvetica"];
  Node10 [label="ns3::Hasher",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_hasher.html",tooltip="Generic Hash function interface."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_impl" ,fontname="Helvetica"];
  Node11 [label="ns3::Ptr\< ns3::Hash\l::Implementation \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ptr" ,fontname="Helvetica"];
  Node12 [label="ns3::Hash::Implementation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_hash_1_1_implementation.html",tooltip="Hash function implementation base class."];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::SimpleRefCount\l\< Implementation \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1empty.html",tooltip="make Callback use a separate empty type"];
  Node15 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Implementation \>" ,fontname="Helvetica"];
  Node15 [label="ns3::SimpleRefCount\l\< T, PARENT, DELETER \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip="A template-based reference counting class."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::Hash::Implementation \>" ,fontname="Helvetica"];
  Node16 [label="ns3::Ptr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ptr.html",tooltip="Smart pointer class similar to boost::intrusive_ptr."];
}
