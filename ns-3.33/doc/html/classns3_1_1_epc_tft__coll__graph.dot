digraph "ns3::EpcTft"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::EpcTft",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This class implements the EPS bearer Traffic Flow Template (TFT), which is the set of all packet filt..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::SimpleRefCount\l\< EpcTft \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1empty.html",tooltip="make Callback use a separate empty type"];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< EpcTft \>" ,fontname="Helvetica"];
  Node4 [label="ns3::SimpleRefCount\l\< T, PARENT, DELETER \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_simple_ref_count.html",tooltip="A template-based reference counting class."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_filters" ,fontname="Helvetica"];
  Node5 [label="std::list\< ns3::EpcTft\l::PacketFilter \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node6 [label="ns3::EpcTft::PacketFilter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structns3_1_1_epc_tft_1_1_packet_filter.html",tooltip="Implement the data structure representing a TrafficFlowTemplate Packet Filter."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" localIpv6Prefix\nremoteIpv6Prefix" ,fontname="Helvetica"];
  Node7 [label="ns3::Ipv6Prefix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ipv6_prefix.html",tooltip="Describes an IPv6 prefix."];
  Node8 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" localIpv6Address\nremoteIpv6Address" ,fontname="Helvetica"];
  Node8 [label="ns3::Ipv6Address",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ipv6_address.html",tooltip="Describes an IPv6 address."];
  Node9 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" localMask\nremoteMask" ,fontname="Helvetica"];
  Node9 [label="ns3::Ipv4Mask",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ipv4_mask.html",tooltip="a class to represent an Ipv4 address mask"];
  Node10 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" localAddress\nremoteAddress" ,fontname="Helvetica"];
  Node10 [label="ns3::Ipv4Address",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ipv4_address.html",tooltip="Ipv4 addresses are stored in host order in this class."];
  Node11 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ns3::EpcTft::PacketFilter \>" ,fontname="Helvetica"];
  Node11 [label="std::list\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node12 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
