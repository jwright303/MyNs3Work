digraph "ns3::Time::IsZero"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::Time::IsZero",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Exactly equivalent to t == 0."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::InterferenceHelper\l::CalculateChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a430cf5d51fa5ea6e1a74585edd6ed311",tooltip="Calculate the success rate of the chunk given the SINR, duration, and Wi-Fi mode."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::InterferenceHelper\l::CalculateHtPhyHeaderPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a406607dc15ef678c987d02aaafab733f",tooltip="Calculate the error rate of the HT PHY header."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::InterferenceHelper\l::CalculateNonHtPhyHeaderPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#abe6a31838a1c187dd76226f790d8ef94",tooltip="Calculate the error rate of the non-HT PHY header."];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="WifiErrorRateModelsTestCase\lMimo::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_wifi_error_rate_models_test_case_mimo.html#a80c805e3cde3b802ea49f023415b5542",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::InterferenceHelper\l::CalculatePayloadChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#ad5d3ad27b948c541c4440e846e214d0c",tooltip="Calculate the success rate of the payload chunk given the SINR, duration, and Wi-Fi mode."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ns3::InterferenceHelper\l::CalculatePayloadPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#aaf44e824e663c38566488ee05a4ecbb1",tooltip="Calculate the error rate of the given PHY payload only in the provided time window (thus enabling per..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::ThreeGppChannelModel\l::ChannelMatrixNeedsUpdate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_channel_model.html#ae0252981d1f4d5c0e3149f2dd38c0cac",tooltip="Check if the channel matrix has to be updated."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::ThreeGppChannelModel\l::GetChannel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_channel_model.html#a5a406c78416046c228d628935b8ef0f8",tooltip="Looks for the channel matrix associated to the aMob and bMob pair in m_channelMap."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::TcpWestwood::EstimateBW",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_westwood.html#a5c1377a1cca6cfc1c653e3591fd145ea",tooltip="Estimate the network's bandwidth."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::TcpWestwood::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_westwood.html#a5e7c9809e45567a0492a685db4b59251",tooltip="Timing information on received ACK."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::TcpSocketBase\l::EstimateRtt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_socket_base.html#af10157be4b91fdefbc3f618baf6919b2",tooltip="Take into account the packet for RTT estimation."];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::TcpSocketBase\l::DoForwardUp",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_socket_base.html#ad5e7b21b9e9371bf9c19da5d3c56aac1",tooltip="Called by TcpSocketBase::ForwardUp{,6}()."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ns3::ThreeGppChannelCondition\lModel::GetChannelCondition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_channel_condition_model.html#a3065d925996498a7ad41fe5004b90a3c",tooltip="Retrieve the condition of the channel between a and b."];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ThreeGppV2vUrbanLosNlosv\lChCondModelTestCase::Evaluate\lChannelCondition",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_three_gpp_v2v_urban_los_nlosv_ch_cond_model_test_case.html#aa8d55f861e5bade2509f64ac730319f2",tooltip="Evaluates the channel condition between two nodes by calling the method GetChannelCondition on m_cond..."];
  Node23 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ThreeGppV2vHighwayLosNlosv\lChCondModelTestCase::EvaluateChannel\lCondition",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_three_gpp_v2v_highway_los_nlosv_ch_cond_model_test_case.html#a4ed0de80e9723c449dbe65567ccf1505",tooltip="Evaluates the channel condition between two nodes by calling the method GetChannelCondition on m_cond..."];
  Node23 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ThreeGppChannelCondition\lModelTestCase::EvaluateChannel\lCondition",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_three_gpp_channel_condition_model_test_case.html#a5d1783b8b6eb685246c6f90d240cec2d",tooltip="Evaluates the channel condition between two nodes by calling the method GetChannelCondition on m_cond..."];
  Node23 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="V2vUrbanProbChCondModelTest\lCase::EvaluateChannelCondition",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_v2v_urban_prob_ch_cond_model_test_case.html#a5dacfb4db3bc39d0dcbaeee000370724",tooltip="Evaluates the channel condition between two nodes by calling the method GetChannelCondition on m_cond..."];
  Node23 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="V2vHighwayProbChCondModel\lTestCase::EvaluateChannelCondition",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_v2v_highway_prob_ch_cond_model_test_case.html#a0b793e4103942cc9f626a46c86fe34fc",tooltip="Evaluates the channel condition between two nodes by calling the method GetChannelCondition on m_cond..."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ns3::QosTxop::GetTxopFragmentSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#aa1bc62e1f9797ff1d7cc76ae702e0e0e",tooltip="Calculate the size of the current TXOP fragment."];
  Node34 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ns3::QosTxop::GetNextTxop\lFragmentSize",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#a38051a521b5f3f0498c657497e70f7e1",tooltip="Calculate the size of the next TXOP fragment."];
  Node34 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ns3::QosTxop::GetNTxopFragment",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#a273420d09cef0f6d03f2d4832db0ce60",tooltip="Calculate the number of TXOP fragments needed for the transmission of the current packet."];
  Node40 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="ns3::QosTxop::GetTxopFragment\lOffset",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#a03dc8e799f94fc24e36f528773eb93c5",tooltip="Calculate the offset for the fragment."];
  Node34 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="ns3::QosTxop::IsTxopFragmentation",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#a08b1d31e4c307f33dc159672a5d63c5b",tooltip="Check if the current packet is fragmented because of an exceeded TXOP duration."];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ns3::WifiPhy::MaybeCcaBusy\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa4598d83591258697a98d1c2dad5473a",tooltip="Eventually switch to CCA busy."];
  Node45 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="ns3::WifiPhy::ContinueReceive\lHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ac5c2d333cf5e8c1f33604ef1584486fe",tooltip="Continue receiving the PHY header of a PPDU (i.e."];
  Node46 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ns3::WifiPhy::StartReceive\lHeader",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa7bcb29f6ad8b8280792fc83a25f8eac",tooltip="Start receiving the PHY header of a PPDU (i.e."];
  Node45 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="ns3::WifiPhy::EndReceive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a0528e5f0ded822ff3df47b5146cb0484",tooltip="The last symbol of the PPDU has arrived."];
  Node70 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="ns3::WifiPhy::StartReceive\lPayload",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a613c3092a7f6f1dc2d815a4d2de989fa",tooltip="Start receiving the PSDU (i.e."];
  Node71 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="ns3::WifiPhy::ResetReceive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a50ffb3c7ed515f30eb48b11c8ffca939",tooltip="Reset PHY at the end of the packet under reception after it has failed the PHY header."];
  Node72 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="ns3::WifiPhy::Send",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ae2f35b3d040230efc25a13d51a6a141f",tooltip=" "];
  Node45 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="ns3::WifiPhy::StartReceive\lPreamble",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#af931f42dfd80e57d56822a021b13f9a7",tooltip="Start receiving the PHY preamble of a PPDU (i.e."];
  Node1 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="ns3::LrWpanMac::PdDataConfirm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_lr_wpan_mac.html#ac81207dec57efdb50dc4b1132e68399f",tooltip="IEEE 802.15.4-2006 section 6.2.1.2 Confirm the end of transmission of an MPDU to MAC."];
  Node74 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="ns3::LrWpanNetDevice\l::CompleteConfig",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_lr_wpan_net_device.html#a2851594198a88409d0a25401e9c61997",tooltip="Configure PHY, MAC and CSMA/CA."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="ns3::TcpIllinois::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_illinois.html#aa6531d04046528431302336d56592e23",tooltip="Measure RTT for each ACK Keep track of min and max RTT."];
  Node1 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="ns3::TcpLp::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_lp.html#ad89d82d1ff9c4808ac566ecc7991548f",tooltip="Timing information on received ACK."];
  Node1 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="ns3::TcpVegas::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_vegas.html#adb646411aad266d6db894b88f2baff0f",tooltip="Compute RTTs needed to execute Vegas algorithm."];
  Node1 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="ns3::TcpVeno::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_veno.html#a8270456c1a00231bd8c2282da8b99561",tooltip="Perform RTT sampling needed to execute Veno algorithm."];
  Node1 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="ns3::TcpYeah::PktsAcked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_tcp_yeah.html#a2423d9c6a6aea3c8e58749c9219d2fbd",tooltip="Compute RTTs needed to execute YeAH algorithm."];
  Node1 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="ns3::ThreeGppHttpClient\l::ReceiveEmbeddedObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_http_client.html#af2257e388fac0fd9d5cc2d35e383330f",tooltip="Receive a packet of embedded object from the destination web server."];
  Node96 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="ns3::ThreeGppHttpClient\l::ReceivedDataCallback",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_http_client.html#ae67fed74a7aff8ad27098bdaea37ae6c",tooltip="Invoked when m_socket receives some packet data."];
  Node1 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="ns3::ThreeGppHttpClient\l::ReceiveMainObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_three_gpp_http_client.html#a14947d4a5930fdaaaaa06def462de64f",tooltip="Receive a packet of main object from the destination web server."];
  Node101 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="ns3::MacLow::RxStartIndication",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#af096a2fe9597c4ca80ae1af4870a45a8",tooltip=" "];
  Node102 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="ns3::MacLow::ResetPhy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a4158eb64f54ae53935769cdf0b12aafb",tooltip="Remove WifiPhy associated with this MacLow."];
  Node102 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="ns3::MacLow::SetPhy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#abbd1aac31c7ed79f717b9c92cb664608",tooltip="Set up WifiPhy associated with this MacLow."];
  Node1 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="ns3::WifiPhy::ScheduleEnd\lOfMpdus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a2f2d338a875de35148a213a6bea1337d",tooltip="Schedule end of MPDUs events."];
  Node105 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="ns3::UanPdp::SumTapsFromMaxC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_uan_pdp.html#ae362f92a5cf406547cfd2cce83f47db4",tooltip="Compute the coherent sum of tap amplitudes starting after a delay from the maximum amplitude for a to..."];
  Node1 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="ns3::UanPdp::SumTapsFrom\lMaxNc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_uan_pdp.html#a5d30befd86497b34cb15c90a85d63243",tooltip="Compute the non-coherent sum of tap amplitudes starting after a delay from the maximum amplitude for ..."];
  Node107 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="ns3::UanPhyCalcSinrFhFsk\l::CalcSinrDb",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_uan_phy_calc_sinr_fh_fsk.html#a482c22fe961d64d5a624171f69fa34f9",tooltip="Calculate the SINR value for a packet."];
  Node1 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="ns3::WifiPhy::SwitchMaybe\lToCcaBusy",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a75f5905e356d1cdff251043fa10c158e",tooltip="Check if PHY state should move to CCA busy state based on current state of interference tracker."];
}
