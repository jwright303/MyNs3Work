digraph "ns3::Length::GetDouble"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::Length::GetDouble",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Current length value."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::Length::Div",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a7daf9638cbd17ed6d4e992a3952a007e",tooltip="Calculate how many times numerator can be split into denominator sized pieces."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::Length::Mod",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#afac3c47a78c634db9af9f93ed6af7b6e",tooltip="Calculate the amount remaining after dividing two lengths."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::Length::operator!=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#af69bc7b2edb1a54188782d577e42e9a7",tooltip="Compare two length objects for inequality."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::Length::operator*",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a317b34a070d2aff052a7191e45de524b",tooltip="Multiply a length value by a scalar."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::Length::operator+",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a81ba7608eafdf624bd5cd46b5d56b2e2",tooltip="Add two length values together."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ns3::Length::operator-",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a7328e276ad57564a13596f71e8b2bc5e",tooltip="Subtract two length values."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::Length::operator/",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a74379a530ca259ed0607cf58d1c026f7",tooltip="Divide a length value by another length value."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::Length::operator\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a2ff8a778d1a1fbe1f13a05b0ceb44f57",tooltip="Check if l has a value less than r."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::Length::operator\<=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a67fb31c01159b40b4b4d9e8f7fe8618f",tooltip="Check if l has a value less than or equal to r."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ns3::Length::operator==",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#ae4d7d57f28dbc9133d004ad4bf25969c",tooltip="Compare two length objects for equality."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::Length::operator\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a07aff9ce5d9b9b8f9d71ba1fd6417cfc",tooltip="Check if l has a value greater than r."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::Length::operator\>=",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_length.html#a8ebf6235f8e08aaba199c57816eb232d",tooltip="Check if l has a value greater than or equal to r."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="LengthTestCase::TestAdding\lLengthAndQuantity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a04878ad5407f0f5173c155633842620f",tooltip="Test arithmetic operations."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="LengthTestCase::TestAdding\lQuantityAndLength",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#aa64fb51b10a0fc47ee5870c7fb33b13a",tooltip="Test arithmetic operations."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="LengthTestCase::TestAdding\lTwoLengths",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#aba36db8f0bf8ecef156fbcfe13f3ae15",tooltip="Test arithmetic operations."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="LengthTestCase::TestConstruct\lLengthFromQuantity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a6d4b7cf8919aeb8e210b469c5ca7f925",tooltip="Test that a Length object can be constructed from a Quantity object."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="LengthTestCase::TestConstruct\lLengthFromSIUnits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a5d5265b76492086996874cc1099d1985",tooltip="Test that a Length object constructed from various SI units has the correct value in meters."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="LengthTestCase::TestConstruct\lLengthFromString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#ad86da4823e79f5063a762a9398e954a5",tooltip="Test that a length object can be constructed from a string."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="LengthTestCase::TestConstruct\lLengthFromUSUnits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a79ecfcb291767ce152301074c922f086",tooltip="Test that a Length object constructed from various US units has the correct value in meters."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="LengthTestCase::TestCopy\lAssignment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a334be01a1825d711ca05b912c9f740bd",tooltip="Test that a length object can be updated by assignment from another length object."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="LengthTestCase::TestDefault\lLengthIsZero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a6fdeb520cf133e67147606fdde2d0fc6",tooltip="Test that a default constructed Length object has a value of 0."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="LengthTestCase::TestDivide\lLengthByLength",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a9fc7d31887fae4d811412a5f287cb19b",tooltip="Test arithmetic operations."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="LengthTestCase::TestDivide\lLengthByScalar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a1edf6efd15a2eef7e0c2fd13bd6e53f7",tooltip="Test arithmetic operations."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="LengthTestCase::TestDivReturns\lCorrectRemainder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a1b914b58975d7bc2f8b3b6b1db3884c2",tooltip="Test Div function."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="LengthTestCase::TestDivReturns\lZeroRemainder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a1544835162df5b5841a6855ae8d4633f",tooltip="Test Div function."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="LengthTestCase::TestInput\lStreamOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a463b1b365f41b83d431b66da3ac598b5",tooltip="Test reading length object from a stream produces the expected length value."];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="LengthTestCase::TestLength\lCopyConstructor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#ae13afee358d1f60b33f0cf16bb60d39c",tooltip="Test that the value from one length is copied to another using the copy constructor."];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="LengthTestCase::TestLength\lMoveConstructor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a30f8c030c256c15a22170190a1992dc8",tooltip="Test that the value from one length is copied to another using the move constructor."];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="LengthTestCase::TestMove\lAssignment",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#acedf6e60ceff542e60faaf7c7509d0ba",tooltip="Test that a length object can be updated by assignment from a moved length object."];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="LengthTestCase::TestMultiply\lLengthByScalar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a6541f14532084559a075300a1ecce049",tooltip="Test arithmetic operations."];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="LengthTestCase::TestMultiply\lScalarByLength",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#ae3c01e6cbb8ac10fe0c3cc165382ed60",tooltip="Test arithmetic operations."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="LengthTestCase::TestSubtracting\lLengthAndQuantity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a8f04d3ec785f1659012727a890d9b479",tooltip="Test arithmetic operations."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="LengthTestCase::TestSubtracting\lQuantityAndLength",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a519c47d3b0fae587d4a7ac456c7d40e6",tooltip="Test arithmetic operations."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="LengthTestCase::TestSubtracting\lTwoLengths",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a9a199e3843d323f62ece7e44e30eb400",tooltip="Test arithmetic operations."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="LengthTestCase::TestTryParse\lReturnsTrue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_length_test_case.html#a0e5a3acbdd3b6fd09798659f7e89afae",tooltip="Test the TryParse function returns true on success."];
}
