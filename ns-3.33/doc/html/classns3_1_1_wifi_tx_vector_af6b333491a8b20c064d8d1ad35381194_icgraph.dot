digraph "ns3::WifiTxVector::SetNss"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::WifiTxVector::\lSetNss",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Sets the number of Nss."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::IdealWifiManager\l::BuildSnrThresholds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a9324f6fe2c6e6b7b2212f4aac69f9dee",tooltip="Construct the vector of minimum SNRs needed to successfully transmit for all possible combinations (r..."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::IdealWifiManager\l::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a678947f49366ca1734b6299b667845da",tooltip="Initialize() implementation."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::IdealWifiManager\l::GetSnrThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#ae91f9cb4e73c9743497c2d775b482385",tooltip="Return the minimum SNR needed to successfully transmit data with this WifiTxVector at the specified B..."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::IdealWifiManager\l::DoGetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a2e7570eb1f5cbef1067cfb714e94218e",tooltip=" "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::IdealWifiManager\l::DoGetRtsTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#ab263f9a1c04747b2c2b55774bf97854a",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ns3::MinstrelHtWifiManager\l::CalculateMpduTxDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a84b4c0a22ed2444b640efca30a5e293a",tooltip="Estimates the TxTime of a frame with a given mode and group (stream, guard interval and channel width..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::MinstrelHtWifiManager\l::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a3c5c32d2a58fb45a922e435192b0cf43",tooltip="Initialize() implementation."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="TxDurationTest::CheckPayload\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tx_duration_test.html#a8666c54033e392b15feb1d2aa78bd1c7",tooltip="Check if the payload tx duration returned by InterferenceHelper corresponds to a known value of the p..."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="TxDurationTest::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tx_duration_test.html#a92181289166e9577bebdbdb352169597",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="TxDurationTest::CheckTxDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tx_duration_test.html#a86485ba9721aa086d5a487588b856b8a",tooltip="Check if the overall tx duration returned by InterferenceHelper corresponds to a known value of the p..."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="WifiErrorRateModelsTestCase\lMimo::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_wifi_error_rate_models_test_case_mimo.html#a80c805e3cde3b802ea49f023415b5542",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::MacLow::GetAckTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aae813ebc059b7e6aa1c88607e2969936",tooltip="Return a TXVECTOR for the Ack frame given the destination and the mode of the Data used by the sender..."];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::MacLow::GetAckTxVector\lForData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aaa82a9f5d9971541a7135f39c4287104",tooltip="Return a TXVECTOR for the BlockAck frame given the destination and the mode of the Data used by the s..."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::MacLow::GetAckDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a7bd44324cf1996798e5346572f873bcc",tooltip="Return the time required to transmit the Ack to the specified address given the TXVECTOR of the Data ..."];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ns3::MacLow::SendAckAfterData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a8db1635644b89072dfcb5fbc2330031b",tooltip="Send Ack after receiving Data."];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ns3::MacLow::ReceiveOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a2fffa82ad11ebe0e113232813a816eff",tooltip=" "];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ns3::MacLow::Deaggregate\lAmpduAndReceive",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#abac7baed9f0aaeb684e84f44819bce30",tooltip=" "];
  Node13 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="ns3::MacLow::StartDataTx\lTimers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ae7e8072b7d1f8b775000f6f07ee5a3c1",tooltip="Start a Data timer by scheduling appropriate Ack timeout."];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ns3::MacLow::SendBlockAck\lResponse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a85c374be43ba3bd52fd1ad6efdfef6c6",tooltip="This method creates BlockAck frame with header equals to blockAck and start its transmission."];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ns3::MacLow::SendBlockAck\lAfterAmpdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#af6e2acc771d188c0959871f142912296",tooltip="Invoked after an A-MPDU has been received."];
  Node22 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ns3::MacLow::SendBlockAck\lAfterBlockAckRequest",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a84b96c0cc6f32fca28576ec4df6a0853",tooltip="Invoked after that a BlockAckRequest has been received."];
  Node23 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ns3::MacLow::SendDataAfterCts",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a68c30ffb5ff64c0fa1defcfe6d751907",tooltip="Send Data after receiving CTS."];
  Node24 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ns3::MacLow::SendCtsToSelf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a209c346576d367ef16cfa1cfdefff909",tooltip="Send CTS for a CTS-to-self mechanism."];
  Node20 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ns3::MacLow::SendDataPacket",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ab177d7c7ba53c56f91612114412914bf",tooltip="Send Data packet, which can be Data-Ack or RTS-CTS-Data-Ack transaction."];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ns3::MacLow::GetBlockAck\lTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a227f7cf96af4e059f660cd6668869e69",tooltip="Return a TXVECTOR for the BlockAck frame given the destination and the mode of the Data used by the s..."];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ns3::MacLow::GetResponse\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ae23ccb3c313c640daf5bd4c857eb0d7a",tooltip="Return the time required to transmit the response frames (Ack or BAR+BA following the policy configur..."];
  Node30 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ns3::MacLow::CalculateOverhead\lTxTime",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aa2d5acb9a87a417cfa46a4e8b4a8ed01",tooltip=" "];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ns3::MacLow::CalculateOverall\lTxTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a77295a7a4b2e8787e8217f1e58b1746f",tooltip=" "];
  Node32 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ns3::MacLow::CalculateTransmissionTime",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a753fdeae4fb18b9b4d3b48c61f721686",tooltip=" "];
  Node30 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ns3::MacLow::SendRtsForPacket",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ac472702b866a51ea2dfb7637381897aa",tooltip="Send RTS to begin RTS-CTS-Data-Ack transaction."];
  Node29 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ns3::MacLow::GetCtsTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#abe2810a59020adbcf64abbef2bcf319f",tooltip="Return a TXVECTOR for the CTS frame given the destination and the mode of the RTS used by the sender."];
  Node35 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ns3::MacLow::GetCtsTxVector\lForRts",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a10a0e90050844fe4273e1259fb23530f",tooltip="Return a TXVECTOR for the CTS frame given the destination and the mode of the RTS used by the sender."];
  Node36 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ns3::MacLow::GetCtsDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a1080472066215e34cd52242ec6cb0e2a",tooltip="Return the time required to transmit the CTS to the specified address given the TXVECTOR of the RTS (..."];
  Node35 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ns3::MacLow::SendCtsAfterRts",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aebcd4c3e8d64fb53af1f8a862c766e33",tooltip="Send CTS after receiving RTS."];
  Node38 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ns3::WifiRemoteStationManager\l::GetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a694863b2c3093952b2629e5a2d341a75",tooltip=" "];
  Node39 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ns3::MacLow::GetDataTxVector",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aeb3a8ccdb7a068b7ee69d507a66a1b60",tooltip="Return a TXVECTOR for the Data frame given the destination."];
  Node40 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ns3::WaveMacLow::GetData\lTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wave_mac_low.html#a1bb1f43357a8c9513961eca42e104de4",tooltip="Return a TXVECTOR for the DATA frame given the destination."];
  Node40 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ns3::WifiRemoteStationManager\l::NeedRts",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a39ace4bf721e87a345bcd650f990ae3c",tooltip=" "];
  Node39 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="PowerRateAdaptationTest\l::TestAparf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a3c3954526cb787125fea4c50cfe76174",tooltip="Test aparf function."];
  Node39 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="PowerRateAdaptationTest\l::TestParf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a06db52c180644f3b961de054c41f2115",tooltip="Test parf function."];
  Node39 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="PowerRateAdaptationTest\l::TestRrpaa",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#af0e5f044ed9bdf20dc203926ff8677b4",tooltip="Test rrpaa function."];
  Node1 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="ns3::WifiRemoteStationManager\l::GetRtsTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#af1d1d8ad08efe3fbe876c67c17e89ef2",tooltip=" "];
  Node138 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="ns3::MacLow::GetRtsTxVector",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a89fbeddfe91a47f0dcc1f3d7fd5108a0",tooltip="Return a TXVECTOR for the RTS frame given the destination."];
  Node139 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="ns3::WifiPpdu::GetTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#a43e190b01f0cd0d287416df16bb1de3a",tooltip="Get the TXVECTOR used to send the PPDU."];
  Node141 -> Node142 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="ns3::WifiPpdu::GetTxDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#a0a0af942d5c7af3f92666fcdef1d0460",tooltip="Get the total transmission duration of the PPDU."];
  Node1 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="ns3::MinstrelHtWifiManager\l::IsValidMcs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#ae830b47b0301066a9e16fed61fc1882d",tooltip="Check the validity of a combination of number of streams, chWidth and mode."];
  Node143 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 -> Node144 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="ns3::MinstrelHtWifiManager\l::RateInit",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a3b59b889db624539c6d5af89fa5e9f74",tooltip="Initialize Minstrel Table."];
  Node1 -> Node156 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="TestDlOfdmaPhyTransmission\l::SendMuPpdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_test_dl_ofdma_phy_transmission.html#afe56ec46ca095d86e1713aeff86f8804",tooltip="Send MU-PPDU function."];
  Node156 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="TestDlOfdmaPhyTransmission\l::RunOne",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_test_dl_ofdma_phy_transmission.html#a1e08a9246e3eb151fbfdb8df03d1ea1a",tooltip="Run one function."];
}
