digraph "ns3::WifiTxVector::GetChannelWidth"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::WifiTxVector::\lGetChannelWidth",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::IdealWifiManager\l::AddSnrThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a07b8198f3c1f258c46af76a3ffe746a7",tooltip="Adds a pair of WifiTxVector and the minimum SNR for that given vector to the list."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::IdealWifiManager\l::BuildSnrThresholds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a9324f6fe2c6e6b7b2212f4aac69f9dee",tooltip="Construct the vector of minimum SNRs needed to successfully transmit for all possible combinations (r..."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ns3::IdealWifiManager\l::DoInitialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a678947f49366ca1734b6299b667845da",tooltip="Initialize() implementation."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ns3::IdealWifiManager\l::GetSnrThreshold",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#ae91f9cb4e73c9743497c2d775b482385",tooltip="Return the minimum SNR needed to successfully transmit data with this WifiTxVector at the specified B..."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ns3::IdealWifiManager\l::DoGetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a2e7570eb1f5cbef1067cfb714e94218e",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::InterferenceHelper\l::CalculateChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a430cf5d51fa5ea6e1a74585edd6ed311",tooltip="Calculate the success rate of the chunk given the SINR, duration, and Wi-Fi mode."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::InterferenceHelper\l::CalculateHtPhyHeaderPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#a406607dc15ef678c987d02aaafab733f",tooltip="Calculate the error rate of the HT PHY header."];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::InterferenceHelper\l::CalculateNonHtPhyHeaderPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#abe6a31838a1c187dd76226f790d8ef94",tooltip="Calculate the error rate of the non-HT PHY header."];
  Node8 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="WifiErrorRateModelsTestCase\lMimo::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_wifi_error_rate_models_test_case_mimo.html#a80c805e3cde3b802ea49f023415b5542",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ns3::YansErrorRateModel\l::DoGetChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_yans_error_rate_model.html#af89a17618fe3ab8a80030a9ebd4aeab9",tooltip="A pure virtual method that must be implemented in the subclass."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ns3::WifiPhy::EndOfMpdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a691d8a123bd6041f4c1533102a2122ef",tooltip="The last symbol of an MPDU in an A-MPDU has arrived."];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ns3::WifiPhy::ScheduleEnd\lOfMpdus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a2f2d338a875de35148a213a6bea1337d",tooltip="Schedule end of MPDUs events."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::WifiPhy::StartReceive\lPayload",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a613c3092a7f6f1dc2d815a4d2de989fa",tooltip="Start receiving the PSDU (i.e."];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ns3::WifiPhy::ContinueReceive\lHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ac5c2d333cf5e8c1f33604ef1584486fe",tooltip="Continue receiving the PHY header of a PPDU (i.e."];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ns3::WifiPhy::StartReceive\lHeader",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa7bcb29f6ad8b8280792fc83a25f8eac",tooltip="Start receiving the PHY header of a PPDU (i.e."];
  Node15 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ns3::WifiPhy::EndReceive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a0528e5f0ded822ff3df47b5146cb0484",tooltip="The last symbol of the PPDU has arrived."];
  Node40 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ns3::SpectrumWifiPhy\l::GetCenterFrequencyForChannel\lWidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#a8da257b190cf1ea74b9306a2200b674c",tooltip="Get the center frequency of the channel corresponding the current TxVector rather than that of the su..."];
  Node41 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="ns3::SpectrumWifiPhy\l::StartTx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_spectrum_wifi_phy.html#a2506b7651bed80b5db10843389bab297",tooltip=" "];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ns3::WifiMode::GetDataRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_mode.html#a276ae81290496f5601d738dc88d9523f",tooltip=" "];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="ns3::WaveMacLow::GetData\lTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wave_mac_low.html#a1bb1f43357a8c9513961eca42e104de4",tooltip="Return a TXVECTOR for the DATA frame given the destination."];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ns3::WifiPhy::GetPayload\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a7e72152289274c390430fa6e52e99acf",tooltip=" "];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="ns3::WifiPhy::GetPhyHeader\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa3d6056d67327dc5a757e5e49f68ab37",tooltip=" "];
  Node46 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ns3::InterferenceHelper\l::CalculatePayloadPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#aaf44e824e663c38566488ee05a4ecbb1",tooltip="Calculate the error rate of the given PHY payload only in the provided time window (thus enabling per..."];
  Node46 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="ns3::WifiPhy::CalculatePhy\lPreambleAndHeaderDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a1793e6110ca3623131def396f487c11d",tooltip=" "];
  Node48 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="ns3::MinstrelHtWifiManager\l::CalculateMpduTxDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#a84b4c0a22ed2444b640efca30a5e293a",tooltip="Estimates the TxTime of a frame with a given mode and group (stream, guard interval and channel width..."];
  Node48 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="ns3::WifiPhy::CalculateTx\lDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ab05d00f449ae33a33eb7a5bc2a6a5cc5",tooltip=" "];
  Node51 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="ns3::WifiPpdu::GetTxDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#a0a0af942d5c7af3f92666fcdef1d0460",tooltip="Get the total transmission duration of the PPDU."];
  Node51 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="ns3::MacLow::NotifyNav",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a8a11f1b12b7dc41fba389b1b480c55f9",tooltip="Notify NAV function."];
  Node83 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="ns3::MacLow::ReceiveOk",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a2fffa82ad11ebe0e113232813a816eff",tooltip=" "];
  Node48 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="ns3::WifiPhy::GetPhyHeaderMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a97b96ccd13b360572886ba03802b3652",tooltip=" "];
  Node88 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="ns3::WifiPhy::GetPhyPreamble\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a9e4f1e101f3b4fdfdad3f4c470a16a6f",tooltip=" "];
  Node89 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="ns3::WifiMode::GetPhyRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_mode.html#a90dbb00ff8852064654dfa21f2d93250",tooltip=" "];
  Node1 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="ns3::WifiPhyHelper\l::GetRadiotapHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_helper.html#ad81031ab5a8a49fe4d1c70d930cd2b76",tooltip="Get the Radiotap header for a transmitted packet."];
  Node91 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="ns3::WifiPhyHelper\l::GetRadiotapHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_helper.html#a7dbbfd397caab143c64dddff01c5eaea",tooltip="Get the Radiotap header for a received packet."];
  Node91 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="ns3::WifiPhyHelper\l::PcapSniffRxEvent",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_helper.html#a734d8335af5fb3db2e93a80195faccea",tooltip=" "];
  Node91 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="ns3::WifiPhyHelper\l::PcapSniffTxEvent",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_helper.html#a983a6502e5ec27e6da024b0db012704e",tooltip=" "];
  Node1 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="ns3::WifiPhy::GetRuBand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#ad908daf845ac578a18a98e70803f88a3",tooltip="Get the RU band used to transmit a PSDU to a given STA in a HE MU PPDU."];
  Node97 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="ns3::WifiPhy::GetReception\lStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a7d1be3dc94b565164d0c2221058d0641",tooltip="Get the reception status for the provided MPDU and notify."];
  Node98 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="ns3::operator\<\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a3a8fb206e33137628bb0105dac8bbf33",tooltip="Serialize WifiTxVector to the given ostream."];
  Node1 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="ns3::WifiRemoteStationManager\l::ReportAmpduTxStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a499aeb652b1f4a030491a70f7277bd7d",tooltip="Typically called per A-MPDU, either when a Block ACK was successfully received or when a BlockAckTime..."];
  Node100 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="ns3::QosTxop::MissedBlockAck",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_qos_txop.html#a53f04ba906e1b7c99f35eafbb11d4479",tooltip="Event handler when a BlockAck timeout has occurred."];
  Node100 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="ns3::BlockAckManager\l::NotifyGotBlockAck",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_block_ack_manager.html#a9b8a46d72c771c2c1d79588f98259012",tooltip=" "];
  Node1 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="ns3::WifiRemoteStationManager\l::ReportDataOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a209a90c3b806aa1bb89503b119e88fad",tooltip="Should be invoked whenever we receive the ACK associated to a data packet we just sent."];
  Node103 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="PowerRateAdaptationTest\l::TestAparf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a3c3954526cb787125fea4c50cfe76174",tooltip="Test aparf function."];
  Node104 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="PowerRateAdaptationTest\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#aab868cfafe1fcef3c1a777720571147d",tooltip="Implementation to actually run this TestCase."];
  Node103 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="PowerRateAdaptationTest\l::TestParf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a06db52c180644f3b961de054c41f2115",tooltip="Test parf function."];
  Node106 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="PowerRateAdaptationTest\l::TestRrpaa",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#af0e5f044ed9bdf20dc203926ff8677b4",tooltip="Test rrpaa function."];
  Node107 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="Bug2843TestCase::StoreDistinct\lTuple",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_bug2843_test_case.html#a0c30bf88abcc8aa6caec59bb3c5b0200",tooltip="Stores the distinct {starting frequency, channelWidth, Number of subbands in SpectrumModel,..."];
  Node108 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="Bug2843TestCase::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_bug2843_test_case.html#a6ceb2a22b576668147d2f363c0ad378e",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
