digraph "ns3::WifiTxVector::GetMode"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="ns3::WifiTxVector::\lGetMode",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="If this TX vector is associated with an SU PPDU, return the selected payload transmission mode."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ns3::IdealWifiManager\l::AddSnrThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a07b8198f3c1f258c46af76a3ffe746a7",tooltip="Adds a pair of WifiTxVector and the minimum SNR for that given vector to the list."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ns3::IdealWifiManager\l::BuildSnrThresholds",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_ideal_wifi_manager.html#a9324f6fe2c6e6b7b2212f4aac69f9dee",tooltip="Construct the vector of minimum SNRs needed to successfully transmit for all possible combinations (r..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ns3::InterferenceHelper\l::CalculatePayloadChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#ad5d3ad27b948c541c4440e846e214d0c",tooltip="Calculate the success rate of the payload chunk given the SINR, duration, and Wi-Fi mode."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ns3::InterferenceHelper\l::CalculatePayloadPer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_interference_helper.html#aaf44e824e663c38566488ee05a4ecbb1",tooltip="Calculate the error rate of the given PHY payload only in the provided time window (thus enabling per..."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ns3::ErrorRateModel\l::CalculateSnr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_error_rate_model.html#ac22816ff3d265aee0675cfe445d0517a",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="TxDurationTest::CheckHeMu\lTxDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tx_duration_test.html#aa0304b79f39966f80588360632659222",tooltip="Check if the overall Tx duration returned by WifiPhy for a HE MU PPDU corresponds to a known value."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="TxDurationTest::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tx_duration_test.html#a92181289166e9577bebdbdb352169597",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="IdealRateManagerMimoTest\l::CheckLastSelectedMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_ideal_rate_manager_mimo_test.html#ae00227bb175fdab4cda450334ecb3696",tooltip="Check if the selected WifiMode is correct."];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="IdealRateManagerMimoTest\l::DoRun",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_ideal_rate_manager_mimo_test.html#abd548d8a592eb8393d26f703d7db3428",tooltip="Implementation to actually run this TestCase."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ns3::YansErrorRateModel\l::DoGetChunkSuccessRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_yans_error_rate_model.html#af89a17618fe3ab8a80030a9ebd4aeab9",tooltip="A pure virtual method that must be implemented in the subclass."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ns3::MinstrelHtWifiManager\l::DoGetDataTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_minstrel_ht_wifi_manager.html#abc2436c9c8dabb7c78907f478e1bb8c7",tooltip=" "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ns3::MacLow::ForwardDown",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a9babdfa2bf38577f733c4723e6114c16",tooltip="Forward a PSDU down to WifiPhy for transmission."];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ns3::MacLow::SendAckAfterData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a8db1635644b89072dfcb5fbc2330031b",tooltip="Send Ack after receiving Data."];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ns3::MacLow::ReceiveOk",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a2fffa82ad11ebe0e113232813a816eff",tooltip=" "];
  Node17 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ns3::MacLow::SendBlockAck\lResponse",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a85c374be43ba3bd52fd1ad6efdfef6c6",tooltip="This method creates BlockAck frame with header equals to blockAck and start its transmission."];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ns3::MacLow::SendBlockAck\lAfterAmpdu",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#af6e2acc771d188c0959871f142912296",tooltip="Invoked after an A-MPDU has been received."];
  Node17 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ns3::MacLow::SendCtsAfterRts",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aebcd4c3e8d64fb53af1f8a862c766e33",tooltip="Send CTS after receiving RTS."];
  Node25 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ns3::MacLow::SendCtsToSelf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a209c346576d367ef16cfa1cfdefff909",tooltip="Send CTS for a CTS-to-self mechanism."];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ns3::MacLow::StartTransmission",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#aa477261c5209c13c66af9e2ae78b07e5",tooltip=" "];
  Node17 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ns3::MacLow::SendDataAfterCts",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a68c30ffb5ff64c0fa1defcfe6d751907",tooltip="Send Data after receiving CTS."];
  Node29 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ns3::MacLow::SendDataPacket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ab177d7c7ba53c56f91612114412914bf",tooltip="Send Data packet, which can be Data-Ack or RTS-CTS-Data-Ack transaction."];
  Node30 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ns3::MacLow::SendRtsForPacket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ac472702b866a51ea2dfb7637381897aa",tooltip="Send RTS to begin RTS-CTS-Data-Ack transaction."];
  Node31 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ns3::MacLow::GetAckDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a7bd44324cf1996798e5346572f873bcc",tooltip="Return the time required to transmit the Ack to the specified address given the TXVECTOR of the Data ..."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ns3::MacLow::GetCtsDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a1080472066215e34cd52242ec6cb0e2a",tooltip="Return the time required to transmit the CTS to the specified address given the TXVECTOR of the RTS (..."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ns3::WifiRemoteStationManager\l::GetDataTxVector",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a694863b2c3093952b2629e5a2d341a75",tooltip=" "];
  Node34 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ns3::WifiRemoteStationManager\l::NeedRts",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#a39ace4bf721e87a345bcd650f990ae3c",tooltip=" "];
  Node34 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="PowerRateAdaptationTest\l::TestAparf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a3c3954526cb787125fea4c50cfe76174",tooltip="Test aparf function."];
  Node34 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="PowerRateAdaptationTest\l::TestParf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#a06db52c180644f3b961de054c41f2115",tooltip="Test parf function."];
  Node34 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="PowerRateAdaptationTest\l::TestRrpaa",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_power_rate_adaptation_test.html#af0e5f044ed9bdf20dc203926ff8677b4",tooltip="Test rrpaa function."];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ns3::WaveMacLow::GetData\lTxVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wave_mac_low.html#a1bb1f43357a8c9513961eca42e104de4",tooltip="Return a TXVECTOR for the DATA frame given the destination."];
  Node1 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="ns3::MpduAggregator\l::GetNextAmpdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mpdu_aggregator.html#abe47e62b7e26e62857688bf2a1bf537b",tooltip="Attempt to aggregate other MPDUs to the given MPDU, while meeting the following constraints:"];
  Node1 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="ns3::MsduAggregator\l::GetNextAmsdu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_msdu_aggregator.html#ad210c7c793b3d86da1b1f63c799c01c6",tooltip="Dequeue MSDUs to be transmitted to a given station and belonging to a given TID from the correspondin..."];
  Node1 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="ns3::WifiPhy::GetPayload\lDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a7e72152289274c390430fa6e52e99acf",tooltip=" "];
  Node1 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="ns3::WifiPhy::GetPhyHeader\lDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#aa3d6056d67327dc5a757e5e49f68ab37",tooltip=" "];
  Node140 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node188 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node188 [label="ns3::WifiPhy::GetPhyHeaderMode",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a97b96ccd13b360572886ba03802b3652",tooltip=" "];
  Node1 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node189 [label="ns3::WifiPhy::GetPhyPreamble\lDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a9e4f1e101f3b4fdfdad3f4c470a16a6f",tooltip=" "];
  Node189 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node190 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node190 [label="ns3::WifiPhyHelper\l::GetRadiotapHeader",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_helper.html#ad81031ab5a8a49fe4d1c70d930cd2b76",tooltip="Get the Radiotap header for a transmitted packet."];
  Node1 -> Node150 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="ns3::MacLow::GetResponse\lDuration",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ae23ccb3c313c640daf5bd4c857eb0d7a",tooltip="Return the time required to transmit the response frames (Ack or BAR+BA following the policy configur..."];
  Node150 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="ns3::MacLow::IsWithinSize\lAndTimeLimits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#a2dc2b39866b901f5baad7f45ec8484a9",tooltip="Check whether an MPDU of the given size, destined to the given receiver and belonging to the given TI..."];
  Node1 -> Node196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node196 [label="ns3::WifiRemoteStationManager\l::NeedCtsToSelf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_remote_station_manager.html#aa3179e61b1a06ff2d0cb0bdbc518e5a2",tooltip="Return if we need to do CTS-to-self before sending a DATA."];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node197 [label="ns3::operator\<\<",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacens3.html#a3a8fb206e33137628bb0105dac8bbf33",tooltip="Serialize WifiTxVector to the given ostream."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node186 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node186 [label="ns3::WifiPpdu::SetPhyHeaders",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_ppdu.html#a5f14f8fd340d849570daffe0a46a31ed",tooltip="Fill in the PHY headers."];
  Node1 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="ns3::MacLow::StartDataTx\lTimers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_mac_low.html#ae7e8072b7d1f8b775000f6f07ee5a3c1",tooltip="Start a Data timer by scheduling appropriate Ack timeout."];
  Node73 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node185 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node185 [label="ns3::WifiPhy::StartReceive\lPayload",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy.html#a613c3092a7f6f1dc2d815a4d2de989fa",tooltip="Start receiving the PSDU (i.e."];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node198 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node198 [label="Bug2843TestCase::StoreDistinct\lTuple",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_bug2843_test_case.html#a0c30bf88abcc8aa6caec59bb3c5b0200",tooltip="Stores the distinct {starting frequency, channelWidth, Number of subbands in SpectrumModel,..."];
  Node1 -> Node200 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node200 [label="ns3::WifiPhyStateHelper\l::SwitchFromRxEndOk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_state_helper.html#a167e72313c4ec128865c46e55fe9e4b2",tooltip="Switch from RX after the reception was successful."];
  Node1 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node201 [label="ns3::WifiPhyStateHelper\l::SwitchToTx",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classns3_1_1_wifi_phy_state_helper.html#a8970100c892b927f0daac3f5f39cb205",tooltip="Switch state to TX for the given duration."];
  Node1 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node202 [label="IdealRateManagerChannelWidth\lTest::TxCallback",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_ideal_rate_manager_channel_width_test.html#ad2ce8bf0047b13d16b800f1876e3a8dd",tooltip="Callback that indicates a PSDU is being transmitted."];
  Node1 -> Node204 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node204 [label="Issue169TestCase::TxCallback",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_issue169_test_case.html#a3330b356ca3b6a71255a422dcee24226",tooltip="Callback that indicates a PSDU is being transmitted."];
}
